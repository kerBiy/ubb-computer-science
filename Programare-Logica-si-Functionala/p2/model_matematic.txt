Problema 10:

a. Se da o lista de numere intregi. Se cere sa se adauge in lista dupa 1-ul element, al 3-lea element, al 7-lea elemen, al 15-lea element … o valoare data e.
b. Se da o lista eterogena, formata din numere intregi si liste de numere intregi. Lista incepe cu un numar si nu sunt 2 elemente consecutive care sunt liste. Se cere ca in fiecare sublista sa se adauge dupa 1-ul, al 3-lea, al 7-lea… element valoarea care se gaseste inainte de sublista in lista eterogena. De ex:
[1, [2, 3], 7, [4, 1, 4], 3, 6, [7, 5, 1, 3, 9, 8, 2, 7], 5] =>
[1, [2, 1, 3], 7, [4, 7, 1, 4, 7], 3, 6, [7, 6, 5, 1, 6, 3, 9, 8, 2,6, 7], 5].

a:    
add_at_positions(l1l2...ln, E, CurrentPos, TargetPos) =
    vid,                         n = 0
    l1 U E U add_at_positions(l2...ln, E, CurrentPos + 1, TargetPos * 2 + 1),     daca CurrentPos = TargetPos
    l1 U add_at_positions(l2...ln, E, CurrentPos + 1, TargetPos),             altfel

b:
add_in_sublists(l1l2...ln) =
    vid,                   n = 0
    l1 U add_in_sublists(l2l3...ln),      daca l2 nu este o sublista
    l1 U add_at_positions(l2, l1, 1, 1) U add_in_sublists(l3...ln),   altfel 

Teste:

a:
add_at_positions([2, 3, 4], 1, 1, 1) == [2, 1, 3, 4].
add_at_positions([2, 3, 4], 1, 1, 3) == [2, 3, 1, 4].
add_at_positions([2, 3, 4], 1, 1, 5) == [2, 3, 4].

b:
add_in_sublists([1, [2, 3], 7, [4, 1, 4], 3, 6, [7, 5, 1, 3, 9, 8, 2, 7], 5]) == [1, [2, 1, 3], 7, [4, 7, 1, 4, 7], 3, 6, [7, 6, 5, 1, 6, 3, 9, 8, 2, 6, 7], 5].